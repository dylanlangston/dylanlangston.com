name: Release Site To Production

on:
  workflow_run:
    workflows: ["Build and Deploy Pages"]
    types: [completed]

jobs:
  publish-release:
    runs-on: ubuntu-latest
    permissions:
      packages: read
      contents: read
    environment:
      name: production
    steps:
      - name: 'Download artifact'
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "release-artifact"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${{ steps.download.outputs.download-path }}/dylanlangstoncom-v${{ needs.build.outputs.datetime}}.zip`, Buffer.from(download.data));
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "${{ steps.download.outputs.download-path }}/dylanlangstoncom-v${{ needs.build.outputs.datetime}}.zip"
          artifactContentType: application/zip
          body: |
            **DylanLangston.com - _Prerelease v${{ needs.build.outputs.datetime }}_**
            ${{ github.event.head_commit.message }}
          prerelease: true
          draft: false
          commit: ${{ github.head_ref }}
          tag: v${{ needs.build.outputs.datetime }}
          token: ${{ secrets.GITHUB_TOKEN }}
