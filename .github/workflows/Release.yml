name: 4️⃣ - Release Site to Production

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      commit-message:
        required: true
        type: string
      runId:
        required: true
        type: string
      body:
        required: true
        type: string
        default: |
          **DylanLangston.com - _Prerelease v${{ inputs.version }}_**
          ${{ inputs.commit-message }}

concurrency:
  group: "publish"
  cancel-in-progress: false

jobs:
  release:
    name: "Release 📦"
    runs-on: ubuntu-latest
    timeout-minutes: 1
    permissions:
      packages: read
      contents: write
    environment:
      name: production
    steps:
      - name: Release Summary
        uses: dylanlangston/dylanlangston.com/.github/actions/PopulateBuildSummary@main
        id: summary
        with:
          version: ${{ inputs.version }}
          mode: 'release'
          runId: ${{ github.run_id }}
      - name: 'Download artifact'
        uses: actions/github-script@v7
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: '${{ github.run_id }}',
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "dylanlangston.com-v${{ inputs.version }}"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            //let fs = require('fs');
            //fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/dylanlangston.com-v${{ inputs.version }}.zip`, Buffer.from(download.data));

            const releaseResponse = await github.rest.repos.createRelease({
              body: "${{ inputs.body }}",
              name: "v${{ inputs.version }}",
              make_latest: true,
              owner: "${{ github.repository_owner }}",
              prerelease: true,
              draft: false,
              repo: "${{ github.repository }}",
              target_commitish: "${{ github.sha }}",
              tag_name: "v${{ inputs.version }}"
            });
            console.log(releaseResponse);
      # - name: Create Release
      #   id: create_release
      #   uses: ncipollo/release-action@v1
      #   with:
      #     artifacts: "dylanlangston.com-v${{ inputs.version }}.zip"
      #     artifactContentType: application/zip
      #     body: |
      #       **DylanLangston.com - _Prerelease v${{ inputs.version }}_**
      #       ${{ inputs.commit-message }}
      #     prerelease: true
      #     draft: false
      #     commit: ${{ github.head_ref }}
      #     tag: v${{ inputs.version }}
      #     token: ${{ secrets.GITHUB_TOKEN }}
